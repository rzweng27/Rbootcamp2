tapply(growrate,list(lightpen,sal),mean)
require("car")
require("gmodels")
require("mosaic")
attach(coralgr)
require("car")
require("gmodels")
require("mosaic")
attach(coralgr)
install.packages("rmarkdown")
v<-c(1:8)
v
v<-seq(1,5,9,13)
v<-seq(1,13,4)
v
source('~/Documents/GitHub/R-Bootcamp-/rbootcamp.R')
x <- c(1,2,3)
y <- c(10,20,30,40,50,60,70)
x+y
w<-seq(5,1,0.2)
w<-seq(1,5,0.2)
w
w<-seq(5,1,0.2)
w<-seq(5,1,.2)
w<-seq(5,1,-0.2)
w
3:1
v <- z[seq(1,5,2)]
z <- c(1,3,5,7,9,11); z[3]
v <- z[seq(1,5,2)]
v
t<-z[1,3,2]
t<-z[c(1,3,2)]
t
t<-z[c(2,1,3)]
z[c(2,1,3)]
z[9] <- 11
z
debugSource('~/Documents/GitHub/R-Bootcamp-/rbootcamp.R')
x<-1:10
y=(x-1)/(x+1)
y
runif(n)
X<-runif(20)
X
belowmean<-X[X<mean(X)]
belowmean
X<mean(X)
X <- matrix(c(1:2),nrow=2,ncol=4)
X
X <- matrix(c(rnorm(35)),nrow=5,ncol=7)
X
C <- cbind(1:3,4:6,5:7); C
D <- rbind(1:3,4:6); D
rbind(C,D)
cbind(C,C)
cbind(C,D)
x <- seq(1,27)
dim(x) <- c(3,9)
is.array(x)
is.matrix(x)
setwd("/Users/reginazweng/Documents/GitHub")
hurricane <- read.csv(data.url,comment.char='#')
hurricane <- read.csv(hurricanes.csv)
setwd("/Users/reginazweng/Documents/GitHub/Rbootcamp")
hurricane <- read.csv(hurricanes.csv)
hurricane <- read.csv("hurricanes.csv")
hurricane <- read.csv("hurricanes.csv",header=T)
hurricane <- read.csv("hurricanes.csv",comment.char='#')
hurricane
course.url <- "http://kingaa.github.io/R_Tutorial/"
download.file(paste0(course.url,"Intro1.R"),destfile="Intro1.R",mode="w")
source('~/Documents/GitHub/Rbootcamp2/rbootcamp.R')
light <- c(20,20,20,20,21,24,44,60,90,94,101)
rmax <- c(1.73,1.65,2.02,1.89,2.61,1.36,2.37,2.08,2.69,2.32,3.67)
plot(light, rmax)
fit <- lm(rmax~light)
summary(fit)
abline(fit)
download.file(paste0(course.url,"Intro2.R"),destfile="Intro2.R",mode="w")
download.file(paste0(course.url,"ChlorellaGrowth.csv"),destfile="ChlorellaGrowth.csv",mode="w")
X <- read.csv("ChlorellaGrowth.csv",comment.char='#')
setwd("/Users/reginazweng/Documents/GitHub/Rbootcamp2")
X <- read.csv("ChlorellaGrowth.csv",comment.char='#')
Light <- X[,1]
rmax <- X[,2]
par(cex=1.5,cex.main=0.9)
plot(rmax~light,data=X,xlab="light intensity (uE/m2/s)",ylab="maximum growth rate (1/d)",pch=16)
title(main="Data from Fussmann et al. (2000) system")
fit <- lm(rmax~Light)
summary(fit); abline(fit)
c1 <- round(fit$coef[1],digits=3) 	# intercept
c2 <- round(fit$coef[2],digits=3) 	# slope
text(50,3,paste("rmax=",c1,"+",c2,"light"))
LogLight=log(Light)
par(cex=1.5,cex.main=0.9)
plot(rmax~LogLight,data=X,xlab="light intensity (uE/m2/s)",ylab="maximum growth rate (1/d)",pch=16)
par(cex=1.5,cex.main=0.9)
plot(rmax~LogLight,data=X,xlab="Log light intensity (uE/m2/s)",ylab="maximum growth rate (1/d)",pch=16)
title(main="Data from Fussmann et al. (2000) system")
fit <- lm(rmax~LogLight)
summary(fit); abline(fit)
c1 <- round(fit$coef[1],digits=3) 	# intercept
c2 <- round(fit$coef[2],digits=3) 	# slope
text(50,3,paste("rmax=",c1,"+",c2,"light"))
par(cex=1.5,cex.main=0.9)
plot(rmax~light,data=X,xlab="light intensity (uE/m2/s)",ylab="maximum growth rate (1/d)",pch=16)
title(main="Data from Fussmann et al. (2000) system")
fit <- lm(rmax~Light)
summary(fit); abline(fit)
# Next we get the regression equation to 'display itself' on the graph
c1 <- round(fit$coef[1],digits=3) 	# intercept
c2 <- round(fit$coef[2],digits=3) 	# slope
text(50,3,paste("rmax=",c1,"+",c2,"light"))
?plot.lm
par(cex=1.5,cex.main=0.9)
plot(rmax~light,data=X,xlab="light intensity (uE/m2/s),xlim=c(0,120),",ylab="maximum growth rate (1/d)",pch=16)
plot(rmax~light,data=X,xlab="light intensity (uE/m2/s),xlim=c(0,120),ylim=c(1,4)",ylab="maximum growth rate (1/d)",pch=16)
plot(rmax~light,data=X,xlab="light intensity (uE/m2/s),xlim=c(0,120),ylim=c(1,5)",ylab="maximum growth rate (1/d)",pch=16)
plot(rmax,light,xlim=c(0,120),ylim=c(1,5)",ylab="maximum growth rate (1/d)",pch=16)
plot(rmax~light,xlim=c(0,120),ylim=c(1,5)",ylab="maximum growth rate (1/d)",pch=16)
plot(rmax,light,data=X,xlab="light intensity (uE/m2/s)",xlim=c(0,120),ylim=c(1,5),ylab="maximum growth rate (1/d)",pch=16)
plot(rmax~light,data=X,xlab="light intensity (uE/m2/s)",xlim=c(0,120),ylim=c(1,5),ylab="maximum growth rate (1/d)",pch=16)
plot(rmax~light,data=X,xlab="light intensity (uE/m2/s)",xlim=c(0,120),ylim=c(1,4),ylab="maximum growth rate (1/d)",pch=16)
title(main="Data from Fussmann et al. (2000) system")
fit <- lm(rmax~Light)
summary(fit); abline(fit)
c1 <- round(fit$coef[1],digits=3)   # intercept
c2 <- round(fit$coef[2],digits=3) 	# slope
text(50,3,paste("rmax=",c1,"+",c2,"light"))
phi <- 1
for (k in 1:100) {
phi <- 1+1/phi
print(c(k,phi))
}
a <- 1.1
b <- 0.001
T <- seq(from=1,to=200,by=1)
N <- numeric(length(T))
n <- 2
for (t in T) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(T,N)
N <- numeric(length(T))
for (t in 1:length(T)) {
n <- a*n/(1+b*n)
N[t] <- n
}
T <- seq(from=1,to=100,by=1)
N <- numeric(length(T))
for (t in 1:length(T)) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(T,N)
T <- seq(from=1,to=2,by=1)
N <- numeric(length(T))
for (t in 1:length(T)) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(T,N)
T <- seq(from=1,to=1,by=1)
N <- numeric(length(T))
for (t in 1:length(T)) {
n <- a*n/(1+b*n)
N[t] <- n
}
plot(T,N)
phi <- 20
k <- 1
while (k <= 100) {
phi <- 1+1/phi
print(c(k,phi))
k <- k+1
}
phi <- 20
conv <- FALSE
while (!conv) {
phi.new <- 1+1/phi
conv <- phi==phi.new
phi <- phi.new
}
ls
ls()
xx <- 1
xx <- 1
while(xx < 5) {
xx <- xx+1;
if (xx == 3) {
break; }
}
print(xx)
plot(cars)
print(*)
print("*"")
print("*"")
for(ii in 1:9){
if (ii in 1:8) {
cat("\n")
}
else{
cat("*")
}
}
for(ii in 1:9){
if (ii in 1:8) {
cat("\n")
}
else{
cat("*")
}
}}
for(ii in 1:9){
if (ii in 1:8) {
cat("\n")
else{
cat("*")
}
}
}
for(ii in 1:9){
if (ii in 1:8) {
for(ii in 1:9){
if (ii < 9) {
cat("\n")
else{
for(ii in 1:9){
if (ii < 9) {
cat("\n")
}
else{
cat("*")
}
}
for(ii in 1:9){
if (ii < 9) {
cat("\n")
}
else{
cat("*")
}
}
}
for(ii in 1:9){
if (ii < 9) {
cat("\n")
}
else{
cat("*")
}
}
for(ii in 1:9){
if (ii < 9) {
cat("&*")
}
else{
cat("&*")
}
}
for(ii in 1:9){
if (ii < 9) {
cat("&*")
}
else{
cat("&")
}
}
for(ii in 1:9){
if (ii < 9) {
cat("*")
}
else{
cat("&*")
}
}
for(ii in 1:9){
if (ii < 9) {
cat("*&")
}
else{
cat("*")
}
}
for(ii in 1:10){
if (ii < 10) {
cat("*&")
}
else{
cat("*")
}
}
dogs <- 10;
for (i in 1:5){
dogs <- dogs + 1;
}
dogs
meatloaf <- 0;
for (i in 5:9){
meatloaf <- meatloaf - i + 1;
cat(meatloaf)
}
meatloaf <- 0;
for (i in 5:9){
meatloaf <- meatloaf - i + 1;
cat(meatloaf)
}
bubbles <- 12;
for (i in -1:-4){
bubbles <- i;
}
bubbles
meatloaf <- 0;
for (i in 5:9){
meatloaf <- meatloaf - i + 1;
cat(meatloaf)
}
years <- c( 2015, 2016, 2018, 2020, 2021)
for(ii in 1:length(years)){
if(years[ii] %% 2 == 0){
cat(years[ii], 'Hooray, congressional elections!', sep = '\t', fill = T)
}
}
years <- c( 2015, 2016, 2018, 2020, 2021)
for(ii in 1:length(years)){
if(years[ii] %% 2 == 0){
cat(years[ii], 'Hooray, congressional elections!', sep = '\t', fill = T)
}
{
if(years[ii] %% 4 == 0){
cat(years[ii], 'Hooray, presidential elections!', sep = '\t', fill = T)
}
}
years <- c( 2015, 2016, 2018, 2020, 2021)
for(ii in 1:length(years)){
if(years[ii] %% 2 == 0){
cat(years[ii], 'Hooray, congressional elections!', sep = '\t', fill = T)
}
{
if(years[ii] %% 4 == 0){
cat(years[ii], 'Hooray, presidential elections!', sep = '\t', fill = T)
}
years <- c( 2015, 2016, 2018, 2020, 2021)
for(ii in 1:length(years)){
if(years[ii] %% 2 == 0){
cat(years[ii], 'Hooray, congressional elections!', sep = '\t', fill = T)
}
{
if(years[ii] %% 4 == 0){
cat(years[ii], 'Hooray, presidential elections!', sep = '\t', fill = T)
}
years <- c( 2015, 2016, 2018, 2020, 2021)
for(ii in 1:length(years)){
if(years[ii] %% 2 == 0){
cat(years[ii], 'Hooray, congressional elections!', sep = '\t', fill = T)
}
{
if(years[ii] %% 4 == 0){
cat(years[ii], 'Hooray, presidential elections!', sep = '\t', fill = T)
}
years <- c( 2015, 2016, 2018, 2020, 2021)
for(ii in 1:length(years)){
if(years[ii] %% 2 == 0){
cat(years[ii], 'Hooray, congressional elections!', sep = '\t', fill = T)
}
years <- c( 2015, 2016, 2018, 2020, 2021)
for(ii in 1:length(years)){
if(years[ii] %% 2 == 0){
cat(years[ii], 'Hooray, congressional elections!', sep = '\t', fill = T)
}
{
if(years[ii] %% 4 == 0){
cat(years[ii], 'Hooray, presidential elections!', sep = '\t', fill = T)
}
}}
years <- c( 2015, 2016, 2018, 2020, 2021)
for(ii in 1:length(years)){
if(years[ii] %% 2 == 0){
cat(years[ii], 'Hooray, congressional elections!', sep = '\t', fill = T)
}
{
if(years[ii] %% 4 == 0){
cat(years[ii], 'Hooray, presidential elections!', sep = '\t', fill = T)
}
###you can use the if statement with the modulus operator to conditionally perform operations
years <- c( 2015, 2016, 2018, 2020, 2021)
for(ii in 1:length(years)){
if(years[ii] %% 2 == 0){
cat(years[ii], 'Hooray, congressional elections!', sep = '\t', fill = T)
}
}
}}
}}
}}
}}
'
)
Q
}}}}}}}}}}}}}}}
+}}}}}}}}}}
++}}}}}}}}}}}}}}}
